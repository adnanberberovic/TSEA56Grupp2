
Kommodul_vA0.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  000005e8  0000067c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000263  00800130  00800130  000006ac  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006ac  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000006dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000696  00000000  00000000  0000075c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000204  00000000  00000000  00000df2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a9  00000000  00000000  00000ff6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001fc  00000000  00000000  000013a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000352  00000000  00000000  0000159c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000543  00000000  00000000  000018ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00001e31  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	23 c1       	rjmp	.+582    	; 0x294 <__vector_19>
  4e:	00 00       	nop
  50:	83 c0       	rjmp	.+262    	; 0x158 <__vector_20>
  52:	00 00       	nop
  54:	b2 c0       	rjmp	.+356    	; 0x1ba <__vector_21>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ee       	ldi	r30, 0xE8	; 232
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 33       	cpi	r26, 0x30	; 48
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	23 e0       	ldi	r18, 0x03	; 3
  b4:	a0 e3       	ldi	r26, 0x30	; 48
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 39       	cpi	r26, 0x93	; 147
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	2f d1       	rcall	.+606    	; 0x322 <main>
  c4:	8f c2       	rjmp	.+1310   	; 0x5e4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Komm_InitPortDirections>:
		curr = curr->next;
	}
	curr->next = (buffer_ *)malloc(sizeof(buffer_));
	curr->next->val = val;
	curr->next->next = NULL; // Add node last.
}
  c8:	80 e4       	ldi	r24, 0x40	; 64
  ca:	84 b9       	out	0x04, r24	; 4
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	8a b9       	out	0x0a, r24	; 10
  d0:	08 95       	ret

000000d2 <SPI_SlaveInit>:
  d2:	1d bc       	out	0x2d, r1	; 45
  d4:	83 ee       	ldi	r24, 0xE3	; 227
  d6:	8c bd       	out	0x2c, r24	; 44
  d8:	08 95       	ret

000000da <BT_init>:
  da:	10 92 c5 00 	sts	0x00C5, r1
  de:	87 e0       	ldi	r24, 0x07	; 7
  e0:	80 93 c4 00 	sts	0x00C4, r24
  e4:	88 ed       	ldi	r24, 0xD8	; 216
  e6:	80 93 c1 00 	sts	0x00C1, r24
  ea:	86 e0       	ldi	r24, 0x06	; 6
  ec:	80 93 c2 00 	sts	0x00C2, r24
  f0:	08 95       	ret

000000f2 <send_BT_buffer>:
  f2:	44 e6       	ldi	r20, 0x64	; 100
  f4:	50 e0       	ldi	r21, 0x00	; 0
  f6:	bc 01       	movw	r22, r24
  f8:	8f ef       	ldi	r24, 0xFF	; 255
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	64 d2       	rcall	.+1224   	; 0x5c6 <strncpy>
  fe:	e1 ec       	ldi	r30, 0xC1	; 193
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	80 62       	ori	r24, 0x20	; 32
 106:	80 83       	st	Z, r24
 108:	08 95       	ret

0000010a <Write_Buffer>:
 10a:	ff 92       	push	r15
 10c:	0f 93       	push	r16
 10e:	1f 93       	push	r17
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	8c 01       	movw	r16, r24
 116:	f6 2e       	mov	r15, r22
 118:	ea 01       	movw	r28, r20
 11a:	88 81       	ld	r24, Y
 11c:	82 36       	cpi	r24, 0x62	; 98
 11e:	21 f4       	brne	.+8      	; 0x128 <Write_Buffer+0x1e>
 120:	18 82       	st	Y, r1
 122:	8b e2       	ldi	r24, 0x2B	; 43
 124:	93 e0       	ldi	r25, 0x03	; 3
 126:	e5 df       	rcall	.-54     	; 0xf2 <send_BT_buffer>
 128:	88 81       	ld	r24, Y
 12a:	f8 01       	movw	r30, r16
 12c:	e8 0f       	add	r30, r24
 12e:	f1 1d       	adc	r31, r1
 130:	f0 82       	st	Z, r15
 132:	88 81       	ld	r24, Y
 134:	8f 5f       	subi	r24, 0xFF	; 255
 136:	88 83       	st	Y, r24
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	1f 91       	pop	r17
 13e:	0f 91       	pop	r16
 140:	ff 90       	pop	r15
 142:	08 95       	ret

00000144 <Read_Buffer>:
 144:	fb 01       	movw	r30, r22
 146:	20 81       	ld	r18, Z
 148:	82 0f       	add	r24, r18
 14a:	91 1d       	adc	r25, r1
 14c:	dc 01       	movw	r26, r24
 14e:	8c 91       	ld	r24, X
 150:	90 81       	ld	r25, Z
 152:	9f 5f       	subi	r25, 0xFF	; 255
 154:	90 83       	st	Z, r25
 156:	08 95       	ret

00000158 <__vector_20>:
 158:	1f 92       	push	r1
 15a:	0f 92       	push	r0
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	0f 92       	push	r0
 160:	11 24       	eor	r1, r1
 162:	0b b6       	in	r0, 0x3b	; 59
 164:	0f 92       	push	r0
 166:	2f 93       	push	r18
 168:	3f 93       	push	r19
 16a:	4f 93       	push	r20
 16c:	5f 93       	push	r21
 16e:	6f 93       	push	r22
 170:	7f 93       	push	r23
 172:	8f 93       	push	r24
 174:	9f 93       	push	r25
 176:	af 93       	push	r26
 178:	bf 93       	push	r27
 17a:	ef 93       	push	r30
 17c:	ff 93       	push	r31
 17e:	10 92 31 01 	sts	0x0131, r1
 182:	60 91 c6 00 	lds	r22, 0x00C6
 186:	40 91 08 01 	lds	r20, 0x0108
 18a:	50 91 09 01 	lds	r21, 0x0109
 18e:	8b e2       	ldi	r24, 0x2B	; 43
 190:	93 e0       	ldi	r25, 0x03	; 3
 192:	bb df       	rcall	.-138    	; 0x10a <Write_Buffer>
 194:	ff 91       	pop	r31
 196:	ef 91       	pop	r30
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	7f 91       	pop	r23
 1a2:	6f 91       	pop	r22
 1a4:	5f 91       	pop	r21
 1a6:	4f 91       	pop	r20
 1a8:	3f 91       	pop	r19
 1aa:	2f 91       	pop	r18
 1ac:	0f 90       	pop	r0
 1ae:	0b be       	out	0x3b, r0	; 59
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <__vector_21>:
 1ba:	1f 92       	push	r1
 1bc:	0f 92       	push	r0
 1be:	0f b6       	in	r0, 0x3f	; 63
 1c0:	0f 92       	push	r0
 1c2:	11 24       	eor	r1, r1
 1c4:	0b b6       	in	r0, 0x3b	; 59
 1c6:	0f 92       	push	r0
 1c8:	2f 93       	push	r18
 1ca:	3f 93       	push	r19
 1cc:	4f 93       	push	r20
 1ce:	5f 93       	push	r21
 1d0:	6f 93       	push	r22
 1d2:	7f 93       	push	r23
 1d4:	8f 93       	push	r24
 1d6:	9f 93       	push	r25
 1d8:	af 93       	push	r26
 1da:	bf 93       	push	r27
 1dc:	ef 93       	push	r30
 1de:	ff 93       	push	r31
 1e0:	e0 91 06 01 	lds	r30, 0x0106
 1e4:	f0 91 07 01 	lds	r31, 0x0107
 1e8:	80 81       	ld	r24, Z
 1ea:	84 36       	cpi	r24, 0x64	; 100
 1ec:	51 f4       	brne	.+20     	; 0x202 <__vector_21+0x48>
 1ee:	10 82       	st	Z, r1
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	80 93 30 01 	sts	0x0130, r24
 1f6:	e1 ec       	ldi	r30, 0xC1	; 193
 1f8:	f0 e0       	ldi	r31, 0x00	; 0
 1fa:	80 81       	ld	r24, Z
 1fc:	8f 7d       	andi	r24, 0xDF	; 223
 1fe:	80 83       	st	Z, r24
 200:	08 c0       	rjmp	.+16     	; 0x212 <__vector_21+0x58>
 202:	10 92 30 01 	sts	0x0130, r1
 206:	bf 01       	movw	r22, r30
 208:	8f ef       	ldi	r24, 0xFF	; 255
 20a:	91 e0       	ldi	r25, 0x01	; 1
 20c:	9b df       	rcall	.-202    	; 0x144 <Read_Buffer>
 20e:	80 93 c6 00 	sts	0x00C6, r24
 212:	ff 91       	pop	r31
 214:	ef 91       	pop	r30
 216:	bf 91       	pop	r27
 218:	af 91       	pop	r26
 21a:	9f 91       	pop	r25
 21c:	8f 91       	pop	r24
 21e:	7f 91       	pop	r23
 220:	6f 91       	pop	r22
 222:	5f 91       	pop	r21
 224:	4f 91       	pop	r20
 226:	3f 91       	pop	r19
 228:	2f 91       	pop	r18
 22a:	0f 90       	pop	r0
 22c:	0b be       	out	0x3b, r0	; 59
 22e:	0f 90       	pop	r0
 230:	0f be       	out	0x3f, r0	; 63
 232:	0f 90       	pop	r0
 234:	1f 90       	pop	r1
 236:	18 95       	reti

00000238 <send_SPI_buffer>:
 238:	24 e6       	ldi	r18, 0x64	; 100
 23a:	eb e9       	ldi	r30, 0x9B	; 155
 23c:	f1 e0       	ldi	r31, 0x01	; 1
 23e:	df 01       	movw	r26, r30
 240:	1d 92       	st	X+, r1
 242:	2a 95       	dec	r18
 244:	e9 f7       	brne	.-6      	; 0x240 <send_SPI_buffer+0x8>
 246:	44 e6       	ldi	r20, 0x64	; 100
 248:	50 e0       	ldi	r21, 0x00	; 0
 24a:	bc 01       	movw	r22, r24
 24c:	cf 01       	movw	r24, r30
 24e:	bb d1       	rcall	.+886    	; 0x5c6 <strncpy>
 250:	e0 91 0c 01 	lds	r30, 0x010C
 254:	f0 91 0d 01 	lds	r31, 0x010D
 258:	10 82       	st	Z, r1
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	80 93 34 01 	sts	0x0134, r24
 260:	a0 91 0c 01 	lds	r26, 0x010C
 264:	b0 91 0d 01 	lds	r27, 0x010D
 268:	91 e0       	ldi	r25, 0x01	; 1
 26a:	40 e0       	ldi	r20, 0x00	; 0
 26c:	30 91 34 01 	lds	r19, 0x0134
 270:	ec 91       	ld	r30, X
 272:	f0 e0       	ldi	r31, 0x00	; 0
 274:	e5 56       	subi	r30, 0x65	; 101
 276:	fe 4f       	sbci	r31, 0xFE	; 254
 278:	89 2f       	mov	r24, r25
 27a:	20 81       	ld	r18, Z
 27c:	21 11       	cpse	r18, r1
 27e:	01 c0       	rjmp	.+2      	; 0x282 <send_SPI_buffer+0x4a>
 280:	84 2f       	mov	r24, r20
 282:	88 23       	and	r24, r24
 284:	31 f0       	breq	.+12     	; 0x292 <send_SPI_buffer+0x5a>
 286:	89 2f       	mov	r24, r25
 288:	31 30       	cpi	r19, 0x01	; 1
 28a:	09 f0       	breq	.+2      	; 0x28e <send_SPI_buffer+0x56>
 28c:	84 2f       	mov	r24, r20
 28e:	81 11       	cpse	r24, r1
 290:	ed cf       	rjmp	.-38     	; 0x26c <send_SPI_buffer+0x34>
 292:	08 95       	ret

00000294 <__vector_19>:
 294:	1f 92       	push	r1
 296:	0f 92       	push	r0
 298:	0f b6       	in	r0, 0x3f	; 63
 29a:	0f 92       	push	r0
 29c:	11 24       	eor	r1, r1
 29e:	0b b6       	in	r0, 0x3b	; 59
 2a0:	0f 92       	push	r0
 2a2:	2f 93       	push	r18
 2a4:	3f 93       	push	r19
 2a6:	4f 93       	push	r20
 2a8:	5f 93       	push	r21
 2aa:	6f 93       	push	r22
 2ac:	7f 93       	push	r23
 2ae:	8f 93       	push	r24
 2b0:	9f 93       	push	r25
 2b2:	af 93       	push	r26
 2b4:	bf 93       	push	r27
 2b6:	ef 93       	push	r30
 2b8:	ff 93       	push	r31
 2ba:	6e b5       	in	r22, 0x2e	; 46
 2bc:	40 91 0a 01 	lds	r20, 0x010A
 2c0:	50 91 0b 01 	lds	r21, 0x010B
 2c4:	87 e3       	ldi	r24, 0x37	; 55
 2c6:	91 e0       	ldi	r25, 0x01	; 1
 2c8:	20 df       	rcall	.-448    	; 0x10a <Write_Buffer>
 2ca:	80 91 34 01 	lds	r24, 0x0134
 2ce:	81 30       	cpi	r24, 0x01	; 1
 2d0:	99 f4       	brne	.+38     	; 0x2f8 <__vector_19+0x64>
 2d2:	e0 91 0c 01 	lds	r30, 0x010C
 2d6:	f0 91 0d 01 	lds	r31, 0x010D
 2da:	80 81       	ld	r24, Z
 2dc:	84 36       	cpi	r24, 0x64	; 100
 2de:	19 f4       	brne	.+6      	; 0x2e6 <__vector_19+0x52>
 2e0:	10 82       	st	Z, r1
 2e2:	10 92 34 01 	sts	0x0134, r1
 2e6:	60 91 0c 01 	lds	r22, 0x010C
 2ea:	70 91 0d 01 	lds	r23, 0x010D
 2ee:	8b e9       	ldi	r24, 0x9B	; 155
 2f0:	91 e0       	ldi	r25, 0x01	; 1
 2f2:	28 df       	rcall	.-432    	; 0x144 <Read_Buffer>
 2f4:	8e bd       	out	0x2e, r24	; 46
 2f6:	02 c0       	rjmp	.+4      	; 0x2fc <__vector_19+0x68>
 2f8:	8d e2       	ldi	r24, 0x2D	; 45
 2fa:	8e bd       	out	0x2e, r24	; 46
 2fc:	ff 91       	pop	r31
 2fe:	ef 91       	pop	r30
 300:	bf 91       	pop	r27
 302:	af 91       	pop	r26
 304:	9f 91       	pop	r25
 306:	8f 91       	pop	r24
 308:	7f 91       	pop	r23
 30a:	6f 91       	pop	r22
 30c:	5f 91       	pop	r21
 30e:	4f 91       	pop	r20
 310:	3f 91       	pop	r19
 312:	2f 91       	pop	r18
 314:	0f 90       	pop	r0
 316:	0b be       	out	0x3b, r0	; 59
 318:	0f 90       	pop	r0
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	0f 90       	pop	r0
 31e:	1f 90       	pop	r1
 320:	18 95       	reti

00000322 <main>:

int main(void)
{
 322:	cf 93       	push	r28
 324:	df 93       	push	r29
 326:	cd b7       	in	r28, 0x3d	; 61
 328:	de b7       	in	r29, 0x3e	; 62
 32a:	61 97       	sbiw	r28, 0x11	; 17
 32c:	0f b6       	in	r0, 0x3f	; 63
 32e:	f8 94       	cli
 330:	de bf       	out	0x3e, r29	; 62
 332:	0f be       	out	0x3f, r0	; 63
 334:	cd bf       	out	0x3d, r28	; 61
	
	
	buffer_ *head = (buffer_ *)malloc(sizeof(buffer_)); //Define head of list and alloc memory.
 336:	84 e0       	ldi	r24, 0x04	; 4
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	1e d0       	rcall	.+60     	; 0x378 <malloc>
	head->next= NULL;
 33c:	fc 01       	movw	r30, r24
 33e:	13 82       	std	Z+3, r1	; 0x03
 340:	12 82       	std	Z+2, r1	; 0x02
	head->val = 0;
 342:	11 82       	std	Z+1, r1	; 0x01
 344:	10 82       	st	Z, r1
	
	
	
	
	sleep_enable();
 346:	83 b7       	in	r24, 0x33	; 51
 348:	81 60       	ori	r24, 0x01	; 1
 34a:	83 bf       	out	0x33, r24	; 51
	Komm_InitPortDirections();
 34c:	bd de       	rcall	.-646    	; 0xc8 <Komm_InitPortDirections>
}

// Initiate port values.
void Komm_InitPortValues(void)
{
	PORTB = 1<<PORTB4;
 34e:	80 e1       	ldi	r24, 0x10	; 16
 350:	85 b9       	out	0x05, r24	; 5
	
	
	sleep_enable();
	Komm_InitPortDirections();
	Komm_InitPortValues();
	SPI_SlaveInit();
 352:	bf de       	rcall	.-642    	; 0xd2 <SPI_SlaveInit>
	BT_init();
 354:	c2 de       	rcall	.-636    	; 0xda <BT_init>
	sei();
 356:	78 94       	sei
	char testbuffer2_[] = " 9/11 is a lie. ";
 358:	81 e1       	ldi	r24, 0x11	; 17
 35a:	ef e1       	ldi	r30, 0x1F	; 31
 35c:	f1 e0       	ldi	r31, 0x01	; 1
 35e:	de 01       	movw	r26, r28
 360:	11 96       	adiw	r26, 0x01	; 1
 362:	01 90       	ld	r0, Z+
 364:	0d 92       	st	X+, r0
 366:	8a 95       	dec	r24
 368:	e1 f7       	brne	.-8      	; 0x362 <main+0x40>
	while(1)
	{
		send_SPI_buffer(testbuffer_);
 36a:	8e e0       	ldi	r24, 0x0E	; 14
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	64 df       	rcall	.-312    	; 0x238 <send_SPI_buffer>
		send_SPI_buffer(testbuffer2_);
 370:	ce 01       	movw	r24, r28
 372:	01 96       	adiw	r24, 0x01	; 1
 374:	61 df       	rcall	.-318    	; 0x238 <send_SPI_buffer>
 376:	f9 cf       	rjmp	.-14     	; 0x36a <main+0x48>

00000378 <malloc>:
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	82 30       	cpi	r24, 0x02	; 2
 37e:	91 05       	cpc	r25, r1
 380:	10 f4       	brcc	.+4      	; 0x386 <malloc+0xe>
 382:	82 e0       	ldi	r24, 0x02	; 2
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	e0 91 91 03 	lds	r30, 0x0391
 38a:	f0 91 92 03 	lds	r31, 0x0392
 38e:	20 e0       	ldi	r18, 0x00	; 0
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	a0 e0       	ldi	r26, 0x00	; 0
 394:	b0 e0       	ldi	r27, 0x00	; 0
 396:	30 97       	sbiw	r30, 0x00	; 0
 398:	39 f1       	breq	.+78     	; 0x3e8 <malloc+0x70>
 39a:	40 81       	ld	r20, Z
 39c:	51 81       	ldd	r21, Z+1	; 0x01
 39e:	48 17       	cp	r20, r24
 3a0:	59 07       	cpc	r21, r25
 3a2:	b8 f0       	brcs	.+46     	; 0x3d2 <malloc+0x5a>
 3a4:	48 17       	cp	r20, r24
 3a6:	59 07       	cpc	r21, r25
 3a8:	71 f4       	brne	.+28     	; 0x3c6 <malloc+0x4e>
 3aa:	82 81       	ldd	r24, Z+2	; 0x02
 3ac:	93 81       	ldd	r25, Z+3	; 0x03
 3ae:	10 97       	sbiw	r26, 0x00	; 0
 3b0:	29 f0       	breq	.+10     	; 0x3bc <malloc+0x44>
 3b2:	13 96       	adiw	r26, 0x03	; 3
 3b4:	9c 93       	st	X, r25
 3b6:	8e 93       	st	-X, r24
 3b8:	12 97       	sbiw	r26, 0x02	; 2
 3ba:	2c c0       	rjmp	.+88     	; 0x414 <malloc+0x9c>
 3bc:	90 93 92 03 	sts	0x0392, r25
 3c0:	80 93 91 03 	sts	0x0391, r24
 3c4:	27 c0       	rjmp	.+78     	; 0x414 <malloc+0x9c>
 3c6:	21 15       	cp	r18, r1
 3c8:	31 05       	cpc	r19, r1
 3ca:	31 f0       	breq	.+12     	; 0x3d8 <malloc+0x60>
 3cc:	42 17       	cp	r20, r18
 3ce:	53 07       	cpc	r21, r19
 3d0:	18 f0       	brcs	.+6      	; 0x3d8 <malloc+0x60>
 3d2:	a9 01       	movw	r20, r18
 3d4:	db 01       	movw	r26, r22
 3d6:	01 c0       	rjmp	.+2      	; 0x3da <malloc+0x62>
 3d8:	ef 01       	movw	r28, r30
 3da:	9a 01       	movw	r18, r20
 3dc:	bd 01       	movw	r22, r26
 3de:	df 01       	movw	r26, r30
 3e0:	02 80       	ldd	r0, Z+2	; 0x02
 3e2:	f3 81       	ldd	r31, Z+3	; 0x03
 3e4:	e0 2d       	mov	r30, r0
 3e6:	d7 cf       	rjmp	.-82     	; 0x396 <malloc+0x1e>
 3e8:	21 15       	cp	r18, r1
 3ea:	31 05       	cpc	r19, r1
 3ec:	f9 f0       	breq	.+62     	; 0x42c <malloc+0xb4>
 3ee:	28 1b       	sub	r18, r24
 3f0:	39 0b       	sbc	r19, r25
 3f2:	24 30       	cpi	r18, 0x04	; 4
 3f4:	31 05       	cpc	r19, r1
 3f6:	80 f4       	brcc	.+32     	; 0x418 <malloc+0xa0>
 3f8:	8a 81       	ldd	r24, Y+2	; 0x02
 3fa:	9b 81       	ldd	r25, Y+3	; 0x03
 3fc:	61 15       	cp	r22, r1
 3fe:	71 05       	cpc	r23, r1
 400:	21 f0       	breq	.+8      	; 0x40a <malloc+0x92>
 402:	fb 01       	movw	r30, r22
 404:	93 83       	std	Z+3, r25	; 0x03
 406:	82 83       	std	Z+2, r24	; 0x02
 408:	04 c0       	rjmp	.+8      	; 0x412 <malloc+0x9a>
 40a:	90 93 92 03 	sts	0x0392, r25
 40e:	80 93 91 03 	sts	0x0391, r24
 412:	fe 01       	movw	r30, r28
 414:	32 96       	adiw	r30, 0x02	; 2
 416:	44 c0       	rjmp	.+136    	; 0x4a0 <malloc+0x128>
 418:	fe 01       	movw	r30, r28
 41a:	e2 0f       	add	r30, r18
 41c:	f3 1f       	adc	r31, r19
 41e:	81 93       	st	Z+, r24
 420:	91 93       	st	Z+, r25
 422:	22 50       	subi	r18, 0x02	; 2
 424:	31 09       	sbc	r19, r1
 426:	39 83       	std	Y+1, r19	; 0x01
 428:	28 83       	st	Y, r18
 42a:	3a c0       	rjmp	.+116    	; 0x4a0 <malloc+0x128>
 42c:	20 91 8f 03 	lds	r18, 0x038F
 430:	30 91 90 03 	lds	r19, 0x0390
 434:	23 2b       	or	r18, r19
 436:	41 f4       	brne	.+16     	; 0x448 <malloc+0xd0>
 438:	20 91 02 01 	lds	r18, 0x0102
 43c:	30 91 03 01 	lds	r19, 0x0103
 440:	30 93 90 03 	sts	0x0390, r19
 444:	20 93 8f 03 	sts	0x038F, r18
 448:	20 91 00 01 	lds	r18, 0x0100
 44c:	30 91 01 01 	lds	r19, 0x0101
 450:	21 15       	cp	r18, r1
 452:	31 05       	cpc	r19, r1
 454:	41 f4       	brne	.+16     	; 0x466 <malloc+0xee>
 456:	2d b7       	in	r18, 0x3d	; 61
 458:	3e b7       	in	r19, 0x3e	; 62
 45a:	40 91 04 01 	lds	r20, 0x0104
 45e:	50 91 05 01 	lds	r21, 0x0105
 462:	24 1b       	sub	r18, r20
 464:	35 0b       	sbc	r19, r21
 466:	e0 91 8f 03 	lds	r30, 0x038F
 46a:	f0 91 90 03 	lds	r31, 0x0390
 46e:	e2 17       	cp	r30, r18
 470:	f3 07       	cpc	r31, r19
 472:	a0 f4       	brcc	.+40     	; 0x49c <malloc+0x124>
 474:	2e 1b       	sub	r18, r30
 476:	3f 0b       	sbc	r19, r31
 478:	28 17       	cp	r18, r24
 47a:	39 07       	cpc	r19, r25
 47c:	78 f0       	brcs	.+30     	; 0x49c <malloc+0x124>
 47e:	ac 01       	movw	r20, r24
 480:	4e 5f       	subi	r20, 0xFE	; 254
 482:	5f 4f       	sbci	r21, 0xFF	; 255
 484:	24 17       	cp	r18, r20
 486:	35 07       	cpc	r19, r21
 488:	48 f0       	brcs	.+18     	; 0x49c <malloc+0x124>
 48a:	4e 0f       	add	r20, r30
 48c:	5f 1f       	adc	r21, r31
 48e:	50 93 90 03 	sts	0x0390, r21
 492:	40 93 8f 03 	sts	0x038F, r20
 496:	81 93       	st	Z+, r24
 498:	91 93       	st	Z+, r25
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <malloc+0x128>
 49c:	e0 e0       	ldi	r30, 0x00	; 0
 49e:	f0 e0       	ldi	r31, 0x00	; 0
 4a0:	cf 01       	movw	r24, r30
 4a2:	df 91       	pop	r29
 4a4:	cf 91       	pop	r28
 4a6:	08 95       	ret

000004a8 <free>:
 4a8:	cf 93       	push	r28
 4aa:	df 93       	push	r29
 4ac:	00 97       	sbiw	r24, 0x00	; 0
 4ae:	09 f4       	brne	.+2      	; 0x4b2 <free+0xa>
 4b0:	87 c0       	rjmp	.+270    	; 0x5c0 <free+0x118>
 4b2:	fc 01       	movw	r30, r24
 4b4:	32 97       	sbiw	r30, 0x02	; 2
 4b6:	13 82       	std	Z+3, r1	; 0x03
 4b8:	12 82       	std	Z+2, r1	; 0x02
 4ba:	c0 91 91 03 	lds	r28, 0x0391
 4be:	d0 91 92 03 	lds	r29, 0x0392
 4c2:	20 97       	sbiw	r28, 0x00	; 0
 4c4:	81 f4       	brne	.+32     	; 0x4e6 <free+0x3e>
 4c6:	20 81       	ld	r18, Z
 4c8:	31 81       	ldd	r19, Z+1	; 0x01
 4ca:	28 0f       	add	r18, r24
 4cc:	39 1f       	adc	r19, r25
 4ce:	80 91 8f 03 	lds	r24, 0x038F
 4d2:	90 91 90 03 	lds	r25, 0x0390
 4d6:	82 17       	cp	r24, r18
 4d8:	93 07       	cpc	r25, r19
 4da:	79 f5       	brne	.+94     	; 0x53a <free+0x92>
 4dc:	f0 93 90 03 	sts	0x0390, r31
 4e0:	e0 93 8f 03 	sts	0x038F, r30
 4e4:	6d c0       	rjmp	.+218    	; 0x5c0 <free+0x118>
 4e6:	de 01       	movw	r26, r28
 4e8:	20 e0       	ldi	r18, 0x00	; 0
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	ae 17       	cp	r26, r30
 4ee:	bf 07       	cpc	r27, r31
 4f0:	50 f4       	brcc	.+20     	; 0x506 <free+0x5e>
 4f2:	12 96       	adiw	r26, 0x02	; 2
 4f4:	4d 91       	ld	r20, X+
 4f6:	5c 91       	ld	r21, X
 4f8:	13 97       	sbiw	r26, 0x03	; 3
 4fa:	9d 01       	movw	r18, r26
 4fc:	41 15       	cp	r20, r1
 4fe:	51 05       	cpc	r21, r1
 500:	09 f1       	breq	.+66     	; 0x544 <free+0x9c>
 502:	da 01       	movw	r26, r20
 504:	f3 cf       	rjmp	.-26     	; 0x4ec <free+0x44>
 506:	b3 83       	std	Z+3, r27	; 0x03
 508:	a2 83       	std	Z+2, r26	; 0x02
 50a:	40 81       	ld	r20, Z
 50c:	51 81       	ldd	r21, Z+1	; 0x01
 50e:	84 0f       	add	r24, r20
 510:	95 1f       	adc	r25, r21
 512:	8a 17       	cp	r24, r26
 514:	9b 07       	cpc	r25, r27
 516:	71 f4       	brne	.+28     	; 0x534 <free+0x8c>
 518:	8d 91       	ld	r24, X+
 51a:	9c 91       	ld	r25, X
 51c:	11 97       	sbiw	r26, 0x01	; 1
 51e:	84 0f       	add	r24, r20
 520:	95 1f       	adc	r25, r21
 522:	02 96       	adiw	r24, 0x02	; 2
 524:	91 83       	std	Z+1, r25	; 0x01
 526:	80 83       	st	Z, r24
 528:	12 96       	adiw	r26, 0x02	; 2
 52a:	8d 91       	ld	r24, X+
 52c:	9c 91       	ld	r25, X
 52e:	13 97       	sbiw	r26, 0x03	; 3
 530:	93 83       	std	Z+3, r25	; 0x03
 532:	82 83       	std	Z+2, r24	; 0x02
 534:	21 15       	cp	r18, r1
 536:	31 05       	cpc	r19, r1
 538:	29 f4       	brne	.+10     	; 0x544 <free+0x9c>
 53a:	f0 93 92 03 	sts	0x0392, r31
 53e:	e0 93 91 03 	sts	0x0391, r30
 542:	3e c0       	rjmp	.+124    	; 0x5c0 <free+0x118>
 544:	d9 01       	movw	r26, r18
 546:	13 96       	adiw	r26, 0x03	; 3
 548:	fc 93       	st	X, r31
 54a:	ee 93       	st	-X, r30
 54c:	12 97       	sbiw	r26, 0x02	; 2
 54e:	4d 91       	ld	r20, X+
 550:	5d 91       	ld	r21, X+
 552:	a4 0f       	add	r26, r20
 554:	b5 1f       	adc	r27, r21
 556:	ea 17       	cp	r30, r26
 558:	fb 07       	cpc	r31, r27
 55a:	79 f4       	brne	.+30     	; 0x57a <free+0xd2>
 55c:	80 81       	ld	r24, Z
 55e:	91 81       	ldd	r25, Z+1	; 0x01
 560:	84 0f       	add	r24, r20
 562:	95 1f       	adc	r25, r21
 564:	02 96       	adiw	r24, 0x02	; 2
 566:	d9 01       	movw	r26, r18
 568:	11 96       	adiw	r26, 0x01	; 1
 56a:	9c 93       	st	X, r25
 56c:	8e 93       	st	-X, r24
 56e:	82 81       	ldd	r24, Z+2	; 0x02
 570:	93 81       	ldd	r25, Z+3	; 0x03
 572:	13 96       	adiw	r26, 0x03	; 3
 574:	9c 93       	st	X, r25
 576:	8e 93       	st	-X, r24
 578:	12 97       	sbiw	r26, 0x02	; 2
 57a:	e0 e0       	ldi	r30, 0x00	; 0
 57c:	f0 e0       	ldi	r31, 0x00	; 0
 57e:	8a 81       	ldd	r24, Y+2	; 0x02
 580:	9b 81       	ldd	r25, Y+3	; 0x03
 582:	00 97       	sbiw	r24, 0x00	; 0
 584:	19 f0       	breq	.+6      	; 0x58c <free+0xe4>
 586:	fe 01       	movw	r30, r28
 588:	ec 01       	movw	r28, r24
 58a:	f9 cf       	rjmp	.-14     	; 0x57e <free+0xd6>
 58c:	ce 01       	movw	r24, r28
 58e:	02 96       	adiw	r24, 0x02	; 2
 590:	28 81       	ld	r18, Y
 592:	39 81       	ldd	r19, Y+1	; 0x01
 594:	82 0f       	add	r24, r18
 596:	93 1f       	adc	r25, r19
 598:	20 91 8f 03 	lds	r18, 0x038F
 59c:	30 91 90 03 	lds	r19, 0x0390
 5a0:	28 17       	cp	r18, r24
 5a2:	39 07       	cpc	r19, r25
 5a4:	69 f4       	brne	.+26     	; 0x5c0 <free+0x118>
 5a6:	30 97       	sbiw	r30, 0x00	; 0
 5a8:	29 f4       	brne	.+10     	; 0x5b4 <free+0x10c>
 5aa:	10 92 92 03 	sts	0x0392, r1
 5ae:	10 92 91 03 	sts	0x0391, r1
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <free+0x110>
 5b4:	13 82       	std	Z+3, r1	; 0x03
 5b6:	12 82       	std	Z+2, r1	; 0x02
 5b8:	d0 93 90 03 	sts	0x0390, r29
 5bc:	c0 93 8f 03 	sts	0x038F, r28
 5c0:	df 91       	pop	r29
 5c2:	cf 91       	pop	r28
 5c4:	08 95       	ret

000005c6 <strncpy>:
 5c6:	fb 01       	movw	r30, r22
 5c8:	dc 01       	movw	r26, r24
 5ca:	41 50       	subi	r20, 0x01	; 1
 5cc:	50 40       	sbci	r21, 0x00	; 0
 5ce:	48 f0       	brcs	.+18     	; 0x5e2 <strncpy+0x1c>
 5d0:	01 90       	ld	r0, Z+
 5d2:	0d 92       	st	X+, r0
 5d4:	00 20       	and	r0, r0
 5d6:	c9 f7       	brne	.-14     	; 0x5ca <strncpy+0x4>
 5d8:	01 c0       	rjmp	.+2      	; 0x5dc <strncpy+0x16>
 5da:	1d 92       	st	X+, r1
 5dc:	41 50       	subi	r20, 0x01	; 1
 5de:	50 40       	sbci	r21, 0x00	; 0
 5e0:	e0 f7       	brcc	.-8      	; 0x5da <strncpy+0x14>
 5e2:	08 95       	ret

000005e4 <_exit>:
 5e4:	f8 94       	cli

000005e6 <__stop_program>:
 5e6:	ff cf       	rjmp	.-2      	; 0x5e6 <__stop_program>
